{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Urvi\\\\Documents\\\\INFO6150\\\\MERN-Ecommerce\\\\MERN-Ecommerce\\\\frontend\\\\src\\\\pages\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, InputGroup, Col, Card, Table, Image, FloatingLabel } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { sendVerficationEmail, getUserDetails, updateUserProfile, refreshLogin } from \"../actions/userActions\";\nimport { listMyOrders } from \"../actions/orderActions\";\nimport { USER_PROFILE_UPDATE_RESET } from \"../constants/userConstants\";\nimport Meta from \"../components/Meta\";\nimport axios from \"axios\";\nimport getDateString from \"../utils/getDateString\";\nimport \"../styles/profile-page.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfilePage = ({\n  history\n}) => {\n  _s();\n\n  const inputFile = useRef(null);\n  const [showSubmitButton, setShowSubmitButton] = useState(false); // sisable the submit button unless some user detail is changed by user\n\n  const [typePassword, setTypePassword] = useState(\"password\");\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState(\"password\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [allOrders, setAllOrders] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [errorImageUpload, setErrorImageUpload] = useState(\"\");\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    user,\n    error\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userProfileUpdate = useSelector(state => state.userProfileUpdate);\n  const {\n    success\n  } = userProfileUpdate;\n  const orderListUser = useSelector(state => state.orderListUser);\n  const {\n    loading: loadingOrdersList,\n    orders,\n    error: errorOrdersList\n  } = orderListUser; // check whether verification email has to be sent\n\n  const userSendEmailVerfication = useSelector(state => state.userSendEmailVerfication);\n  const {\n    emailSent,\n    hasError\n  } = userSendEmailVerfication; // refresh access token for user details error\n\n  useEffect(() => {\n    if (error && userInfo && !userInfo.isSocialLogin) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [error, dispatch, userInfo]); // set orders to local state\n\n  useEffect(() => {\n    if (orders && orders.length) {\n      setAllOrders([...orders]);\n    }\n  }, [orders]); // check if any of the input fields value is changed, only then show the submit button\n\n  useEffect(() => {\n    if (userInfo) {\n      if (name && userInfo.name !== name) setShowSubmitButton(true);else if (email && userInfo.email !== email) setShowSubmitButton(true);else if (password || confirmPassword) setShowSubmitButton(true);else setShowSubmitButton(false);\n    }\n  }, [name, email, password, confirmPassword, userInfo]);\n  useEffect(() => {\n    dispatch(listMyOrders());\n  }, [dispatch]);\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      // if user is null, first fetch it and then set its details to the local state\n      if (!user || !user.name || success) {\n        dispatch(listMyOrders());\n        dispatch({\n          type: USER_PROFILE_UPDATE_RESET\n        });\n        userInfo ? userInfo.isSocialLogin ? dispatch(getUserDetails(userInfo.id)) : dispatch(getUserDetails(\"profile\")) : dispatch(getUserDetails(\"profile\"));\n\n        if (success) {\n          userInfo.isSocialLogin ? dispatch(getUserDetails(userInfo.id)) : dispatch(getUserDetails(\"profile\"));\n        }\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setAvatar(user.avatar);\n      }\n    }\n  }, [history, userInfo, user, dispatch, success, loadingOrdersList]);\n\n  const showHidePassword = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setTypePassword(typePassword === \"password\" ? \"text\" : \"password\");\n  };\n\n  const showHideConfirmPassword = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setTypeConfirmPassword(typeConfirmPassword === \"password\" ? \"text\" : \"password\");\n  }; // handle file upload to aws bucket\n\n\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/upload\", formData, config);\n      setAvatar(data);\n      dispatch(updateUserProfile({\n        id: user.id,\n        avatar: data\n      }));\n      setUploading(false);\n    } catch (error) {\n      setErrorImageUpload(\"Please choose a valid image\");\n      setUploading(false);\n    }\n  }; // handle image overlay div's click to upload new file\n\n\n  const handleImageClick = () => {\n    inputFile.current.click();\n  }; // update user details\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match. Please retry.\");\n    } else {\n      dispatch(updateUserProfile({\n        id: user.id,\n        name,\n        email,\n        avatar,\n        password,\n        confirmPassword\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"My Profile | The Style Studio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), userInfo && !userInfo.isConfirmed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [emailSent && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        dismissible: true,\n        children: \"A verification link has been sent your mail!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this), hasError && /*#__PURE__*/_jsxDEV(Message, {\n        dismissible: true,\n        variant: \"danger\",\n        children: hasError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          margin: \"0\"\n        },\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"ps-0 \",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: \"Account Not Verified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [`${userInfo.name}, `, \" your account is not yet verfied. Please\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"link\",\n              className: \"p-0\",\n              style: {\n                fontSize: \"0.9em\",\n                margin: \"0 0 0.1em 0\",\n                focus: \"none\"\n              },\n              onClick: () => dispatch(sendVerficationEmail(userInfo.email)),\n              children: \"click here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), \" \", \"to send a verfication email.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      style: userInfo && !userInfo.isConfirmed ? {\n        opacity: \"0.5\",\n        pointerEvents: \"none\"\n      } : {\n        opacity: \"1\",\n        pointerEvents: \"\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        dismissible: true,\n        variant: \"warning\",\n        duration: 8,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), error && error !== \"Not authorised. Token failed\" && /*#__PURE__*/_jsxDEV(Message, {\n        dismissible: true,\n        variant: \"danger\",\n        duration: 10,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        dismissible: true,\n        variant: \"success\",\n        duration: 8,\n        children: \"Profile Updated!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexFlow: \"column nowrap\"\n        },\n        children: [errorImageUpload && /*#__PURE__*/_jsxDEV(Message, {\n          dismissible: true,\n          variant: \"danger\",\n          duration: 10,\n          children: errorImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this), uploading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-page-image\",\n          style: {\n            alignSelf: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: avatar,\n            alt: name,\n            style: {\n              height: \"5em\",\n              width: \"5em\",\n              marginBottom: \"1em\",\n              border: \"1px solid #ced4da\",\n              borderRadius: \"50%\",\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-overlay\",\n            onClick: handleImageClick,\n            children: \"Click to upload image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          id: \"file\",\n          ref: inputFile,\n          onChange: handleImageUpload,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n              controlId: \"nameinput\",\n              label: \"Name\",\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                size: \"lg\",\n                placeholder: \"Enter Name\",\n                type: \"text\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            className: \"my-2\",\n            style: userInfo && userInfo.isSocialLogin ? {\n              pointerEvents: \"none\",\n              opacity: \"0.8\"\n            } : {},\n            children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n              controlId: \"emailinput\",\n              label: \"Email\",\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                size: \"lg\",\n                placeholder: \"Enter Email Address\",\n                type: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), userInfo && !userInfo.isSocialLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"d-block\",\n                children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                  controlId: \"passwordinput\",\n                  label: \"Password\",\n                  style: {\n                    display: \"flex\"\n                  },\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    size: \"lg\",\n                    type: typePassword,\n                    placeholder: \"Enter your password\",\n                    value: password,\n                    style: {\n                      borderRight: \"none\",\n                      width: \"100%\"\n                    },\n                    onChange: e => setPassword(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group-append\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      onClick: showHidePassword,\n                      style: {\n                        fontSize: \"1rem\",\n                        height: \"100%\",\n                        marginLeft: \"-0.5em\",\n                        background: \"transparent\",\n                        borderLeft: \"none\"\n                      },\n                      children: typePassword === \"text\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"far fa-eye-slash\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 379,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"far fa-eye\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 381,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"d-block\",\n                children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                  controlId: \"confirmpasswordinput\",\n                  label: \"Confirm Password\",\n                  style: {\n                    display: \"flex\"\n                  },\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    size: \"lg\",\n                    type: typeConfirmPassword,\n                    placeholder: \"Confirm password\",\n                    value: confirmPassword,\n                    style: {\n                      borderRight: \"none\"\n                    },\n                    onChange: e => setConfirmPassword(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group-append\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      onClick: showHideConfirmPassword,\n                      style: {\n                        fontSize: \"1rem\",\n                        height: \"100%\",\n                        marginLeft: \"-0.5em\",\n                        background: \"transparent\",\n                        borderLeft: \"none\"\n                      },\n                      children: typeConfirmPassword === \"text\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"far fa-eye-slash\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"far fa-eye\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: !showSubmitButton,\n              style: {\n                padding: \"0.5em 1em\"\n              },\n              children: \"Update Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      style: userInfo && !userInfo.isConfirmed ? {\n        opacity: \"0.5\",\n        pointerEvents: \"none\"\n      } : {\n        opacity: \"1\",\n        pointerEvents: \"\"\n      },\n      children: allOrders.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"My Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), loadingOrdersList ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 15\n        }, this) : errorOrdersList ? /*#__PURE__*/_jsxDEV(Message, {\n          dismissible: true,\n          variant: \"danger\",\n          duration: 10,\n          children: errorOrdersList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          responsive: true,\n          className: \"table-sm text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TOTAL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"PAID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DELIVERED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ACTION\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: orders.map((order, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                textAlign: \"center\",\n                padding: \"0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: getDateString(order.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.totalPrice.toLocaleString(\"en-US\", {\n                  maximumFractionDigits: 0,\n                  style: \"currency\",\n                  currency: \"USD\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.isPaid ? getDateString(order.paidAt) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.isDelivered ? getDateString(order.deliveredAt) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                  to: `/order/${order._id}`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    className: \"btn-sm\",\n                    style: {\n                      margin: \"0\"\n                    },\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 23\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          border: \"none\",\n          margin: \"0 auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"No Orders Yet!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Details about all your orders will show up here.\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Continue Shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfilePage, \"8fzPWNdgdMEG+YCtgzpvQ/H0B3Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["C:/Users/Urvi/Documents/INFO6150/MERN-Ecommerce/MERN-Ecommerce/frontend/src/pages/ProfilePage.js"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Link","Form","Button","Row","InputGroup","Col","Card","Table","Image","FloatingLabel","LinkContainer","Loader","Message","sendVerficationEmail","getUserDetails","updateUserProfile","refreshLogin","listMyOrders","USER_PROFILE_UPDATE_RESET","Meta","axios","getDateString","ProfilePage","history","inputFile","showSubmitButton","setShowSubmitButton","typePassword","setTypePassword","typeConfirmPassword","setTypeConfirmPassword","name","setName","email","setEmail","avatar","setAvatar","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","allOrders","setAllOrders","uploading","setUploading","errorImageUpload","setErrorImageUpload","dispatch","userDetails","state","loading","user","error","userLogin","userInfo","userProfileUpdate","success","orderListUser","loadingOrdersList","orders","errorOrdersList","userSendEmailVerfication","emailSent","hasError","isSocialLogin","JSON","parse","localStorage","getItem","length","push","type","id","showHidePassword","e","preventDefault","stopPropagation","showHideConfirmPassword","handleImageUpload","file","target","files","formData","FormData","append","config","headers","data","post","handleImageClick","current","click","handleSubmit","isConfirmed","margin","fontWeight","fontSize","focus","opacity","pointerEvents","display","flexFlow","alignSelf","height","width","marginBottom","border","borderRadius","cursor","value","borderRight","marginLeft","background","borderLeft","padding","map","order","idx","textAlign","createdAt","totalPrice","toLocaleString","maximumFractionDigits","style","currency","isPaid","paidAt","color","isDelivered","deliveredAt","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  InputGroup,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Image,\r\n  FloatingLabel,\r\n} from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  sendVerficationEmail,\r\n  getUserDetails,\r\n  updateUserProfile,\r\n  refreshLogin,\r\n} from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { USER_PROFILE_UPDATE_RESET } from \"../constants/userConstants\";\r\nimport Meta from \"../components/Meta\";\r\nimport axios from \"axios\";\r\nimport getDateString from \"../utils/getDateString\";\r\nimport \"../styles/profile-page.css\";\r\n\r\nconst ProfilePage = ({ history }) => {\r\n  const inputFile = useRef(null);\r\n  const [showSubmitButton, setShowSubmitButton] = useState(false); // sisable the submit button unless some user detail is changed by user\r\n  const [typePassword, setTypePassword] = useState(\"password\");\r\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState(\"password\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [allOrders, setAllOrders] = useState([]);\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [errorImageUpload, setErrorImageUpload] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userProfileUpdate = useSelector((state) => state.userProfileUpdate);\r\n  const { success } = userProfileUpdate;\r\n\r\n  const orderListUser = useSelector((state) => state.orderListUser);\r\n  const {\r\n    loading: loadingOrdersList,\r\n    orders,\r\n    error: errorOrdersList,\r\n  } = orderListUser;\r\n\r\n  // check whether verification email has to be sent\r\n  const userSendEmailVerfication = useSelector(\r\n    (state) => state.userSendEmailVerfication\r\n  );\r\n  const { emailSent, hasError } = userSendEmailVerfication;\r\n\r\n  // refresh access token for user details error\r\n  useEffect(() => {\r\n    if (error && userInfo && !userInfo.isSocialLogin) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [error, dispatch, userInfo]);\r\n\r\n  // set orders to local state\r\n  useEffect(() => {\r\n    if (orders && orders.length) {\r\n      setAllOrders([...orders]);\r\n    }\r\n  }, [orders]);\r\n\r\n  // check if any of the input fields value is changed, only then show the submit button\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (name && userInfo.name !== name) setShowSubmitButton(true);\r\n      else if (email && userInfo.email !== email) setShowSubmitButton(true);\r\n      else if (password || confirmPassword) setShowSubmitButton(true);\r\n      else setShowSubmitButton(false);\r\n    }\r\n  }, [name, email, password, confirmPassword, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listMyOrders());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      // if user is null, first fetch it and then set its details to the local state\r\n      if (!user || !user.name || success) {\r\n        dispatch(listMyOrders());\r\n        dispatch({ type: USER_PROFILE_UPDATE_RESET });\r\n        userInfo\r\n          ? userInfo.isSocialLogin\r\n            ? dispatch(getUserDetails(userInfo.id))\r\n            : dispatch(getUserDetails(\"profile\"))\r\n          : dispatch(getUserDetails(\"profile\"));\r\n        if (success) {\r\n          userInfo.isSocialLogin\r\n            ? dispatch(getUserDetails(userInfo.id))\r\n            : dispatch(getUserDetails(\"profile\"));\r\n        }\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setAvatar(user.avatar);\r\n      }\r\n    }\r\n  }, [history, userInfo, user, dispatch, success, loadingOrdersList]);\r\n\r\n  const showHidePassword = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setTypePassword(typePassword === \"password\" ? \"text\" : \"password\");\r\n  };\r\n\r\n  const showHideConfirmPassword = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setTypeConfirmPassword(\r\n      typeConfirmPassword === \"password\" ? \"text\" : \"password\"\r\n    );\r\n  };\r\n\r\n  // handle file upload to aws bucket\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setAvatar(data);\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user.id,\r\n          avatar: data,\r\n        })\r\n      );\r\n      setUploading(false);\r\n    } catch (error) {\r\n      setErrorImageUpload(\"Please choose a valid image\");\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  // handle image overlay div's click to upload new file\r\n  const handleImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  // update user details\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match. Please retry.\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user.id,\r\n          name,\r\n          email,\r\n          avatar,\r\n          password,\r\n          confirmPassword,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mt-2\">\r\n      <Meta title=\"My Profile | The Style Studio\" />\r\n      {userInfo && !userInfo.isConfirmed ? (\r\n        <>\r\n          {emailSent && (\r\n            <Message variant=\"success\" dismissible>\r\n              A verification link has been sent your mail!\r\n            </Message>\r\n          )}\r\n          {hasError && (\r\n            <Message dismissible variant=\"danger\">\r\n              {hasError}\r\n            </Message>\r\n          )}\r\n          <Card style={{ margin: \"0\" }} className=\"mb-3\">\r\n            <Card.Body className=\"ps-0 \">\r\n              <Card.Title style={{ fontWeight: \"bold\" }}>\r\n                Account Not Verified\r\n              </Card.Title>\r\n              <Card.Text>\r\n                {`${userInfo.name}, `} your account is not yet verfied. Please{\" \"}\r\n                <Button\r\n                  variant=\"link\"\r\n                  className=\"p-0\"\r\n                  style={{\r\n                    fontSize: \"0.9em\",\r\n                    margin: \"0 0 0.1em 0\",\r\n                    focus: \"none\",\r\n                  }}\r\n                  onClick={() => dispatch(sendVerficationEmail(userInfo.email))}\r\n                >\r\n                  click here\r\n                </Button>{\" \"}\r\n                to send a verfication email.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </>\r\n      ) : null}\r\n      <Col\r\n        md={3}\r\n        style={\r\n          userInfo && !userInfo.isConfirmed\r\n            ? {\r\n                opacity: \"0.5\",\r\n                pointerEvents: \"none\",\r\n              }\r\n            : {\r\n                opacity: \"1\",\r\n                pointerEvents: \"\",\r\n              }\r\n        }\r\n      >\r\n        <h2 className=\"text-center\">My Profile</h2>\r\n        {message && (\r\n          <Message dismissible variant=\"warning\" duration={8}>\r\n            {message}\r\n          </Message>\r\n        )}\r\n        {error && error !== \"Not authorised. Token failed\" && (\r\n          <Message dismissible variant=\"danger\" duration={10}>\r\n            {error}\r\n          </Message>\r\n        )}\r\n        {success && (\r\n          <Message dismissible variant=\"success\" duration={8}>\r\n            Profile Updated!\r\n          </Message>\r\n        )}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div style={{ display: \"flex\", flexFlow: \"column nowrap\" }}>\r\n            {errorImageUpload && (\r\n              <Message dismissible variant=\"danger\" duration={10}>\r\n                {errorImageUpload}\r\n              </Message>\r\n            )}\r\n            {uploading ? (\r\n              <Loader />\r\n            ) : (\r\n              <div\r\n                className=\"profile-page-image\"\r\n                style={{ alignSelf: \"center\" }}\r\n              >\r\n                <Image\r\n                  src={avatar}\r\n                  alt={name}\r\n                  style={{\r\n                    height: \"5em\",\r\n                    width: \"5em\",\r\n                    marginBottom: \"1em\",\r\n                    border: \"1px solid #ced4da\",\r\n                    borderRadius: \"50%\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                />\r\n                <div className=\"image-overlay\" onClick={handleImageClick}>\r\n                  Click to upload image\r\n                </div>\r\n              </div>\r\n            )}\r\n            {/* for image upload */}\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              id=\"file\"\r\n              ref={inputFile}\r\n              onChange={handleImageUpload}\r\n              style={{ display: \"none\" }}\r\n            />\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"name\">\r\n                <FloatingLabel\r\n                  controlId=\"nameinput\"\r\n                  label=\"Name\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Control\r\n                    size=\"lg\"\r\n                    placeholder=\"Enter Name\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </FloatingLabel>\r\n              </Form.Group>\r\n              <Form.Group\r\n                controlId=\"email\"\r\n                className=\"my-2\"\r\n                style={\r\n                  userInfo && userInfo.isSocialLogin\r\n                    ? {\r\n                        pointerEvents: \"none\",\r\n                        opacity: \"0.8\",\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                <FloatingLabel\r\n                  controlId=\"emailinput\"\r\n                  label=\"Email\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Control\r\n                    size=\"lg\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </FloatingLabel>\r\n              </Form.Group>\r\n              {userInfo && !userInfo.isSocialLogin && (\r\n                <>\r\n                  <Form.Group>\r\n                    <InputGroup className=\"d-block\">\r\n                      <FloatingLabel\r\n                        controlId=\"passwordinput\"\r\n                        label=\"Password\"\r\n                        style={{ display: \"flex\" }}\r\n                        className=\"mb-3\"\r\n                      >\r\n                        <Form.Control\r\n                          size=\"lg\"\r\n                          type={typePassword}\r\n                          placeholder=\"Enter your password\"\r\n                          value={password}\r\n                          style={{\r\n                            borderRight: \"none\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <InputGroup.Text\r\n                            onClick={showHidePassword}\r\n                            style={{\r\n                              fontSize: \"1rem\",\r\n                              height: \"100%\",\r\n                              marginLeft: \"-0.5em\",\r\n                              background: \"transparent\",\r\n                              borderLeft: \"none\",\r\n                            }}\r\n                          >\r\n                            {typePassword === \"text\" ? (\r\n                              <i className=\"far fa-eye-slash\" />\r\n                            ) : (\r\n                              <i className=\"far fa-eye\" />\r\n                            )}\r\n                          </InputGroup.Text>\r\n                        </div>\r\n                      </FloatingLabel>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup className=\"d-block\">\r\n                      <FloatingLabel\r\n                        controlId=\"confirmpasswordinput\"\r\n                        label=\"Confirm Password\"\r\n                        style={{ display: \"flex\" }}\r\n                        className=\"mb-3\"\r\n                      >\r\n                        <Form.Control\r\n                          size=\"lg\"\r\n                          type={typeConfirmPassword}\r\n                          placeholder=\"Confirm password\"\r\n                          value={confirmPassword}\r\n                          style={{\r\n                            borderRight: \"none\",\r\n                          }}\r\n                          onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <InputGroup.Text\r\n                            onClick={showHideConfirmPassword}\r\n                            style={{\r\n                              fontSize: \"1rem\",\r\n                              height: \"100%\",\r\n                              marginLeft: \"-0.5em\",\r\n                              background: \"transparent\",\r\n                              borderLeft: \"none\",\r\n                            }}\r\n                          >\r\n                            {typeConfirmPassword === \"text\" ? (\r\n                              <i className=\"far fa-eye-slash\" />\r\n                            ) : (\r\n                              <i className=\"far fa-eye\" />\r\n                            )}\r\n                          </InputGroup.Text>\r\n                        </div>\r\n                      </FloatingLabel>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                </>\r\n              )}\r\n              <div className=\"d-grid mb-3\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  disabled={!showSubmitButton}\r\n                  style={{\r\n                    padding: \"0.5em 1em\",\r\n                  }}\r\n                >\r\n                  Update Profile\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Col>\r\n      {/* display orders */}\r\n      <Col\r\n        md={9}\r\n        style={\r\n          userInfo && !userInfo.isConfirmed\r\n            ? {\r\n                opacity: \"0.5\",\r\n                pointerEvents: \"none\",\r\n              }\r\n            : {\r\n                opacity: \"1\",\r\n                pointerEvents: \"\",\r\n              }\r\n        }\r\n      >\r\n        {allOrders.length ? (\r\n          <>\r\n            <h2 className=\"text-center\">My Orders</h2>\r\n            {loadingOrdersList ? (\r\n              <Loader />\r\n            ) : errorOrdersList ? (\r\n              <Message dismissible variant=\"danger\" duration={10}>\r\n                {errorOrdersList}\r\n              </Message>\r\n            ) : (\r\n              <Table\r\n                striped\r\n                bordered\r\n                responsive\r\n                className=\"table-sm text-center\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th>ACTION</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orders.map((order, idx) => (\r\n                    <tr\r\n                      key={idx}\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        padding: \"0\",\r\n                      }}\r\n                    >\r\n                      <td>{getDateString(order.createdAt)}</td>\r\n                      <td>\r\n                        {order.totalPrice.toLocaleString(\"en-US\", {\r\n                          maximumFractionDigits: 0,\r\n                          style: \"currency\",\r\n                          currency: \"USD\",\r\n                        })}\r\n                      </td>\r\n                      <td>\r\n                        {order.isPaid ? (\r\n                          getDateString(order.paidAt)\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{\r\n                              color: \"red\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {order.isDelivered ? (\r\n                          getDateString(order.deliveredAt)\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{\r\n                              color: \"red\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button\r\n                            variant=\"link\"\r\n                            className=\"btn-sm\"\r\n                            style={{ margin: \"0\" }}\r\n                          >\r\n                            Details\r\n                          </Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Card style={{ border: \"none\", margin: \"0 auto\" }}>\r\n            <Card.Body>\r\n              <Card.Title>No Orders Yet!</Card.Title>\r\n              <Card.Text>\r\n                Details about all your orders will show up here.{\" \"}\r\n                <Link to=\"/\">Continue Shopping</Link>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"]},"metadata":{},"sourceType":"module"}