{"ast":null,"code":"import { PRODUCT_DETAILS_FAILURE, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAILURE, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DELETE_FAILURE, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAILURE, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAILURE, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAILURE, PRODUCT_TOP_RATED_REQUEST, PRODUCT_TOP_RATED_SUCCESS, PRODUCT_TOP_RATED_FAILURE } from '../constants/productConstants';\nimport axios from 'axios'; // list orders based on keyword and page number when paginated\n\nexport const listProducts = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let pageNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let pageSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PRODUCT_LIST_REQUEST\n      });\n      const {\n        data\n      } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}&pageSize=${pageSize}`);\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAILURE,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n}; // fetch details of a particular product\n\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // delete a particular product by taking an id\n\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // different headers are used when it is a social login, and when it is a std email login\n\n    const config = userInfo.isSocialLogin ? {\n      headers: {\n        Authorization: `SocialLogin ${userInfo.id}`\n      }\n    } : {\n      headers: {\n        Authorization: `Bearer ${userInfo.accessToken}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/products/${id}`, config);\n    data && dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // create a product, when the user is an admin\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // different headers are used when it is a social login, and when it is a std email login\n\n    const config = userInfo.isSocialLogin ? {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `SocialLogin ${userInfo.id}`\n      }\n    } : {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.accessToken}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/products/`, {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // update the product details from the admin panel view\n\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // different headers are used when it is a social login, and when it is a std email login\n\n    const config = userInfo.isSocialLogin ? {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `SocialLogin ${userInfo.id}`\n      }\n    } : {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.accessToken}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, config);\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // create a new product review for particular product\n\nexport const createProductReview = (productID, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // different headers are used when it is a social login, and when it is a std email login\n\n    const config = userInfo.isSocialLogin ? {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `SocialLogin ${userInfo.id}`\n      }\n    } : {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.accessToken}`\n      }\n    };\n    await axios.post(`/api/products/${productID}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // fetch the top rated products for the carousel\n\nexport const getTopRatedProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_TOP_RATED_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products/top');\n    dispatch({\n      type: PRODUCT_TOP_RATED_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_RATED_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/vipinmamidi/NEU/2nd SEM/WEB D/FP/Thu/MERN-Ecommerce/MERN-Ecommerce/frontend/src/actions/productActions.js"],"names":["PRODUCT_DETAILS_FAILURE","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAILURE","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DELETE_FAILURE","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAILURE","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAILURE","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAILURE","PRODUCT_TOP_RATED_REQUEST","PRODUCT_TOP_RATED_SUCCESS","PRODUCT_TOP_RATED_FAILURE","axios","listProducts","keyword","pageNumber","pageSize","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","deleteProduct","getState","userLogin","userInfo","config","isSocialLogin","headers","Authorization","accessToken","delete","createProduct","post","updateProduct","product","put","_id","createProductReview","productID","review","getTopRatedProducts"],"mappings":"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","sourcesContent":["import {\r\n\tPRODUCT_DETAILS_FAILURE,\r\n\tPRODUCT_DETAILS_REQUEST,\r\n\tPRODUCT_DETAILS_SUCCESS,\r\n\tPRODUCT_LIST_FAILURE,\r\n\tPRODUCT_LIST_REQUEST,\r\n\tPRODUCT_LIST_SUCCESS,\r\n\tPRODUCT_DELETE_FAILURE,\r\n\tPRODUCT_DELETE_REQUEST,\r\n\tPRODUCT_DELETE_SUCCESS,\r\n\tPRODUCT_CREATE_REQUEST,\r\n\tPRODUCT_CREATE_SUCCESS,\r\n\tPRODUCT_CREATE_FAILURE,\r\n\tPRODUCT_UPDATE_REQUEST,\r\n\tPRODUCT_UPDATE_SUCCESS,\r\n\tPRODUCT_UPDATE_FAILURE,\r\n\tPRODUCT_CREATE_REVIEW_REQUEST,\r\n\tPRODUCT_CREATE_REVIEW_SUCCESS,\r\n\tPRODUCT_CREATE_REVIEW_FAILURE,\r\n\tPRODUCT_TOP_RATED_REQUEST,\r\n\tPRODUCT_TOP_RATED_SUCCESS,\r\n\tPRODUCT_TOP_RATED_FAILURE,\r\n} from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\n// list orders based on keyword and page number when paginated\r\nexport const listProducts =\r\n\t(keyword = '', pageNumber = '', pageSize = '') =>\r\n\tasync (dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`/api/products?keyword=${keyword}&pageNumber=${pageNumber}&pageSize=${pageSize}`\r\n\t\t\t);\r\n\r\n\t\t\tdispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PRODUCT_LIST_FAILURE,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.message,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n// fetch details of a particular product\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n\t\tconst { data } = await axios.get(`/api/products/${id}`);\r\n\r\n\t\tdispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DETAILS_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// delete a particular product by taking an id\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\t// different headers are used when it is a social login, and when it is a std email login\r\n\t\tconst config = userInfo.isSocialLogin\r\n\t\t\t? {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `SocialLogin ${userInfo.id}`,\r\n\t\t\t\t\t},\r\n\t\t\t  }\r\n\t\t\t: {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t\t\t\t},\r\n\t\t\t  };\r\n\r\n\t\tconst { data } = await axios.delete(`/api/products/${id}`, config);\r\n\r\n\t\tdata && dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DELETE_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// create a product, when the user is an admin\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\t// different headers are used when it is a social login, and when it is a std email login\r\n\t\tconst config = userInfo.isSocialLogin\r\n\t\t\t? {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\tAuthorization: `SocialLogin ${userInfo.id}`,\r\n\t\t\t\t\t},\r\n\t\t\t  }\r\n\t\t\t: {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\tAuthorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t\t\t\t},\r\n\t\t\t  };\r\n\r\n\t\tconst { data } = await axios.post(`/api/products/`, {}, config);\r\n\r\n\t\tdispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_CREATE_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// update the product details from the admin panel view\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\t// different headers are used when it is a social login, and when it is a std email login\r\n\t\tconst config = userInfo.isSocialLogin\r\n\t\t\t? {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\tAuthorization: `SocialLogin ${userInfo.id}`,\r\n\t\t\t\t\t},\r\n\t\t\t  }\r\n\t\t\t: {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\tAuthorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t\t\t\t},\r\n\t\t\t  };\r\n\r\n\t\tconst { data } = await axios.put(\r\n\t\t\t`/api/products/${product._id}`,\r\n\t\t\tproduct,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_UPDATE_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// create a new product review for particular product\r\nexport const createProductReview =\r\n\t(productID, review) => async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n\t\t\tconst {\r\n\t\t\t\tuserLogin: { userInfo },\r\n\t\t\t} = getState();\r\n\r\n\t\t\t// different headers are used when it is a social login, and when it is a std email login\r\n\t\t\tconst config = userInfo.isSocialLogin\r\n\t\t\t\t? {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\t\tAuthorization: `SocialLogin ${userInfo.id}`,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t  }\r\n\t\t\t\t: {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\t\tAuthorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t  };\r\n\r\n\t\t\tawait axios.post(\r\n\t\t\t\t`/api/products/${productID}/reviews`,\r\n\t\t\t\treview,\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\r\n\t\t\tdispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PRODUCT_CREATE_REVIEW_FAILURE,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.message,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n// fetch the top rated products for the carousel\r\nexport const getTopRatedProducts = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_TOP_RATED_REQUEST });\r\n\r\n\t\tconst { data } = await axios.get('/api/products/top');\r\n\r\n\t\tdispatch({ type: PRODUCT_TOP_RATED_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_TOP_RATED_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}