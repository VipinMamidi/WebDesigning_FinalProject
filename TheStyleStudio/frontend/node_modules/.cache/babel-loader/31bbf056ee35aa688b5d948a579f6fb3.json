{"ast":null,"code":"import { USER_LOGIN_FAILURE, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAILURE, USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST, USER_RESET_PASSWORD_FAILURE, USER_RESET_PASSWORD_SUCCESS, USER_RESET_PASSWORD_REQUEST, USER_EMAIL_VERIFICATION_REQUEST, USER_EMAIL_VERIFICATION_SUCCESS, USER_EMAIL_VERIFICATION_FAILURE, USER_CONFIRM_REQUEST, USER_CONFIRM_SUCCESS, USER_CONFIRM_FAILURE, USER_DETAILS_FAILURE, USER_DETAILS_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_PROFILE_UPDATE_REQUEST, USER_PROFILE_UPDATE_SUCCESS, USER_PROFILE_UPDATE_FAILURE, USER_PROFILE_UPDATE_RESET, USER_LOGIN_REFRESH_REQUEST, USER_LOGIN_REFRESH_SUCCESS, USER_LOGIN_REFRESH_FAILURE, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAILURE, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAILURE, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAILURE, USER_UPDATE_RESET } from '../constants/userConstants';\nexport const userLoginReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload\n      };\n\n    case USER_LOGIN_FAILURE:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return { ...state\n      };\n  }\n}; // use refresh token to obtain new access token for the logged in user\n\nexport const userLoginRefreshReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_LOGIN_REFRESH_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_LOGIN_REFRESH_SUCCESS:\n      return {\n        loading: false,\n        tokenInfo: action.payload\n      };\n\n    case USER_LOGIN_REFRESH_FAILURE:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; // sending an email for account verification\n\nexport const userSendEmailVerficationReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_EMAIL_VERIFICATION_REQUEST:\n      return {\n        isLoading: true\n      };\n\n    case USER_EMAIL_VERIFICATION_SUCCESS:\n      return {\n        isLoading: true,\n        emailSent: action.payload\n      };\n\n    case USER_EMAIL_VERIFICATION_FAILURE:\n      return {\n        isLoading: true,\n        hasError: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; // update user account to confirmed\n\nexport const userConfirmReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isConfirmed: false\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_CONFIRM_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_CONFIRM_SUCCESS:\n      return {\n        loading: false,\n        isConfirmed: action.payload\n      };\n\n    case USER_CONFIRM_FAILURE:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; // reset the user password\n\nexport const userResetPasswordReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_RESET_PASSWORD_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_RESET_PASSWORD_SUCCESS:\n      return {\n        loading: false,\n        resetPassword: action.payload\n      };\n\n    case USER_RESET_PASSWORD_FAILURE:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      {\n        return { ...state\n        };\n      }\n  }\n}; // register user using email and password\n\nexport const userRegisterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_REGISTER_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload\n      };\n\n    case USER_REGISTER_FAILURE:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; // fetch user details\n\nexport const userDetailsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    user: {}\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload\n      };\n\n    case USER_DETAILS_FAILURE:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_DETAILS_RESET:\n      return {\n        user: {}\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; // update user profile, not in admin view\n\nexport const userProfileUpdateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_PROFILE_UPDATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_PROFILE_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        userInfo: action.payload\n      };\n\n    case USER_PROFILE_UPDATE_FAILURE:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_PROFILE_UPDATE_RESET:\n      return {};\n\n    default:\n      return { ...state\n      };\n  }\n}; // list all users for the admin view\n\nexport const userListReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    users: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_LIST_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload.users,\n        page: action.payload.page,\n        pages: action.payload.pages,\n        total: action.payload.total\n      };\n\n    case USER_LIST_FAILURE:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_LIST_RESET:\n      return {\n        users: []\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\nexport const userDeleteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case USER_DELETE_FAILURE:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; // update user from the admin panel view\n\nexport const userUpdateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    user: {}\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case USER_UPDATE_FAILURE:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_UPDATE_RESET:\n      return {\n        user: {}\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["/Users/vipinmamidi/NEU/2nd SEM/WEB D/FP/Thu/MERN-Ecommerce/Git_Copy/WebDesigning_FinalProject/TheStyleStudio/frontend/src/reducers/userReducers.js"],"names":["USER_LOGIN_FAILURE","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAILURE","USER_REGISTER_SUCCESS","USER_REGISTER_REQUEST","USER_RESET_PASSWORD_FAILURE","USER_RESET_PASSWORD_SUCCESS","USER_RESET_PASSWORD_REQUEST","USER_EMAIL_VERIFICATION_REQUEST","USER_EMAIL_VERIFICATION_SUCCESS","USER_EMAIL_VERIFICATION_FAILURE","USER_CONFIRM_REQUEST","USER_CONFIRM_SUCCESS","USER_CONFIRM_FAILURE","USER_DETAILS_FAILURE","USER_DETAILS_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAILURE","USER_PROFILE_UPDATE_RESET","USER_LOGIN_REFRESH_REQUEST","USER_LOGIN_REFRESH_SUCCESS","USER_LOGIN_REFRESH_FAILURE","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAILURE","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAILURE","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAILURE","USER_UPDATE_RESET","userLoginReducer","state","action","type","loading","userInfo","payload","error","userLoginRefreshReducer","tokenInfo","userSendEmailVerficationReducer","isLoading","emailSent","hasError","userConfirmReducer","isConfirmed","userResetPasswordReducer","resetPassword","userRegisterReducer","userDetailsReducer","user","userProfileUpdateReducer","success","userListReducer","users","page","pages","total","userDeleteReducer","userUpdateReducer"],"mappings":"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","sourcesContent":["import {\r\n\tUSER_LOGIN_FAILURE,\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_FAILURE,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_RESET_PASSWORD_FAILURE,\r\n\tUSER_RESET_PASSWORD_SUCCESS,\r\n\tUSER_RESET_PASSWORD_REQUEST,\r\n\tUSER_EMAIL_VERIFICATION_REQUEST,\r\n\tUSER_EMAIL_VERIFICATION_SUCCESS,\r\n\tUSER_EMAIL_VERIFICATION_FAILURE,\r\n\tUSER_CONFIRM_REQUEST,\r\n\tUSER_CONFIRM_SUCCESS,\r\n\tUSER_CONFIRM_FAILURE,\r\n\tUSER_DETAILS_FAILURE,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_PROFILE_UPDATE_REQUEST,\r\n\tUSER_PROFILE_UPDATE_SUCCESS,\r\n\tUSER_PROFILE_UPDATE_FAILURE,\r\n\tUSER_PROFILE_UPDATE_RESET,\r\n\tUSER_LOGIN_REFRESH_REQUEST,\r\n\tUSER_LOGIN_REFRESH_SUCCESS,\r\n\tUSER_LOGIN_REFRESH_FAILURE,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAILURE,\r\n\tUSER_LIST_RESET,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAILURE,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAILURE,\r\n\tUSER_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_LOGIN_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_LOGIN_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload };\r\n\t\tcase USER_LOGIN_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase USER_LOGOUT:\r\n\t\t\treturn {};\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// use refresh token to obtain new access token for the logged in user\r\nexport const userLoginRefreshReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_LOGIN_REFRESH_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_LOGIN_REFRESH_SUCCESS:\r\n\t\t\treturn { loading: false, tokenInfo: action.payload };\r\n\t\tcase USER_LOGIN_REFRESH_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// sending an email for account verification\r\nexport const userSendEmailVerficationReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_EMAIL_VERIFICATION_REQUEST:\r\n\t\t\treturn { isLoading: true };\r\n\t\tcase USER_EMAIL_VERIFICATION_SUCCESS:\r\n\t\t\treturn { isLoading: true, emailSent: action.payload };\r\n\t\tcase USER_EMAIL_VERIFICATION_FAILURE:\r\n\t\t\treturn { isLoading: true, hasError: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// update user account to confirmed\r\nexport const userConfirmReducer = (state = { isConfirmed: false }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_CONFIRM_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_CONFIRM_SUCCESS:\r\n\t\t\treturn { loading: false, isConfirmed: action.payload };\r\n\t\tcase USER_CONFIRM_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// reset the user password\r\nexport const userResetPasswordReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_RESET_PASSWORD_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_RESET_PASSWORD_SUCCESS:\r\n\t\t\treturn { loading: false, resetPassword: action.payload };\r\n\t\tcase USER_RESET_PASSWORD_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault: {\r\n\t\t\treturn { ...state };\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// register user using email and password\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_REGISTER_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_REGISTER_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload };\r\n\t\tcase USER_REGISTER_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// fetch user details\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_DETAILS_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_DETAILS_SUCCESS:\r\n\t\t\treturn { loading: false, user: action.payload };\r\n\t\tcase USER_DETAILS_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase USER_DETAILS_RESET:\r\n\t\t\treturn { user: {} };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// update user profile, not in admin view\r\nexport const userProfileUpdateReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_PROFILE_UPDATE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase USER_PROFILE_UPDATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, userInfo: action.payload };\r\n\t\tcase USER_PROFILE_UPDATE_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase USER_PROFILE_UPDATE_RESET:\r\n\t\t\treturn {};\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// list all users for the admin view\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_LIST_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase USER_LIST_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tusers: action.payload.users,\r\n\t\t\t\tpage: action.payload.page,\r\n\t\t\t\tpages: action.payload.pages,\r\n\t\t\t\ttotal: action.payload.total,\r\n\t\t\t};\r\n\t\tcase USER_LIST_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase USER_LIST_RESET:\r\n\t\t\treturn { users: [] };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_DELETE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase USER_DELETE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true };\r\n\t\tcase USER_DELETE_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// update user from the admin panel view\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_UPDATE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase USER_UPDATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true };\r\n\t\tcase USER_UPDATE_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase USER_UPDATE_RESET:\r\n\t\t\treturn { user: {} };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}