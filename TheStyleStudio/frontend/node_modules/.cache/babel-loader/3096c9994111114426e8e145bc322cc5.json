{"ast":null,"code":"var _jsxFileName = \"/Users/vipinmamidi/NEU/2nd SEM/WEB D/FP/Thu/MERN-Ecommerce/MERN-Ecommerce/frontend/src/pages/UserEditPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Meta from \"../components/Meta\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser, refreshLogin } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserEditPage = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const userId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    user,\n    error\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // get new access tokens\n\n  useEffect(() => {\n    if (error && userInfo && !userInfo.isSocialLogin) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [error, dispatch, userInfo]); // update user details from the admin panel view\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user || !user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, dispatch, userId, successUpdate, history]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-primary\",\n        className: \"my-3\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [user && /*#__PURE__*/_jsxDEV(Meta, {\n        title: `Edit ${user.name} | The Style Studio`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), loadingUpdate ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : errorUpdate ? /*#__PURE__*/_jsxDEV(Message, {\n        dismissible: true,\n        variant: \"danger\",\n        duration: 10,\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [error && /*#__PURE__*/_jsxDEV(Message, {\n            dismissible: true,\n            variant: \"danger\",\n            duration: 10,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"lg\",\n              placeholder: \"Enter Name\",\n              type: \"text\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            className: \"my-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"lg\",\n              placeholder: \"Enter Email Address\",\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"isAdmin\",\n            className: \"my-2\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"Is Admin\",\n                size: \"lg\",\n                style: {\n                  borderRight: \"none\"\n                },\n                checked: isAdmin,\n                onChange: e => setIsAdmin(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"dark\",\n            className: \"my-1\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserEditPage, \"J7CJudum3STEDpjyFp4fGD97XS0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UserEditPage;\nexport default UserEditPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditPage\");","map":{"version":3,"sources":["/Users/vipinmamidi/NEU/2nd SEM/WEB D/FP/Thu/MERN-Ecommerce/MERN-Ecommerce/frontend/src/pages/UserEditPage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Form","Button","InputGroup","Link","Loader","Message","Meta","FormContainer","getUserDetails","updateUser","refreshLogin","USER_UPDATE_RESET","UserEditPage","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","user","error","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","userLogin","userInfo","isSocialLogin","JSON","parse","localStorage","getItem","type","push","_id","handleSubmit","e","preventDefault","target","value","borderRight","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {\r\n  getUserDetails,\r\n  updateUser,\r\n  refreshLogin,\r\n} from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditPage = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // get new access tokens\r\n  useEffect(() => {\r\n    if (error && userInfo && !userInfo.isSocialLogin) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [error, dispatch, userInfo]);\r\n\r\n  // update user details from the admin panel view\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user || !user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, dispatch, userId, successUpdate, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\">\r\n        <Button variant=\"outline-primary\" className=\"my-3\">\r\n          Go Back\r\n        </Button>\r\n      </Link>\r\n      <FormContainer>\r\n        {user && <Meta title={`Edit ${user.name} | The Style Studio`} />}\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate ? (\r\n          <Loader />\r\n        ) : errorUpdate ? (\r\n          <Message dismissible variant=\"danger\" duration={10}>\r\n            {errorUpdate}\r\n          </Message>\r\n        ) : (\r\n          <>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <Form onSubmit={handleSubmit}>\r\n                {error && (\r\n                  <Message dismissible variant=\"danger\" duration={10}>\r\n                    {error}\r\n                  </Message>\r\n                )}\r\n\r\n                <Form.Group controlId=\"name\" className=\"mb-2\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    size=\"lg\"\r\n                    placeholder=\"Enter Name\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\" className=\"my-2\">\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control\r\n                    size=\"lg\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"isAdmin\" className=\"my-2\">\r\n                  <InputGroup>\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      label=\"Is Admin\"\r\n                      size=\"lg\"\r\n                      style={{ borderRight: \"none\" }}\r\n                      checked={isAdmin}\r\n                      onChange={(e) => setIsAdmin(e.target.checked)}\r\n                    ></Form.Check>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"dark\" className=\"my-1\">\r\n                  Edit\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditPage;\r\n"]},"metadata":{},"sourceType":"module"}